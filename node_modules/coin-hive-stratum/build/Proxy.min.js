function Queue(t){return EventEmitter.call(this),void 0===t&&(t=100),this.events=[],this.interval=null,this.bypassed=!1,this.ms=100,this.ms=t,this}function Connection(t){return EventEmitter.call(this),this.id=uuid.v4(),this.host=null,this.port=null,this.ssl=null,this.online=null,this.socket=null,this.queue=null,this.buffer="",this.rpcId=1,this.rpc={},this.auth={},this.minerId={},this.miners=[],this.host=t.host,this.port=t.port,this.ssl=t.ssl,this}function Miner(t){return EventEmitter.call(this),this.id=uuid.v4(),this.login=null,this.address=null,this.user=null,this.diff=null,this.pass=null,this.heartbeat=null,this.connection=null,this.queue=new Queue,this.ws=null,this.online=!1,this.jobs=[],this.hashes=0,this.connection=t.connection,this.ws=t.ws,this.address=t.address,this.user=t.user,this.diff=t.diff,this.pass=t.pass,this}function Proxy(t){EventEmitter.call(this),void 0===t&&(t=defaults),this.host=null,this.port=null,this.pass=null,this.ssl=null,this.address=null,this.user=null,this.diff=null,this.dynamicPool=!1,this.maxMinersPerConnection=100,this.connections={},this.wss=null,this.key=null,this.cert=null,this.path=null,this.server=null,this.credentials=null;var e=Object.assign({},defaults,t);return this.host=e.host,this.port=e.port,this.pass=e.pass,this.ssl=e.ssl,this.address=e.address,this.user=e.user,this.diff=e.diff,this.dynamicPool=e.dynamicPool,this.maxMinersPerConnection=e.maxMinersPerConnection,this.key=e.key,this.cert=e.cert,this.path=e.path,this.server=e.server,this.credentials=e.credentials,this.on("error",function(){}),this}const EventEmitter=require("events"),WebSocket=require("ws"),url=require("url"),http=require("http"),https=require("https"),defaults=require("../config/defaults");Queue.prototype=Object.create(EventEmitter.prototype),Queue.prototype.constructor=Queue,Queue.prototype.start=function(){var t=this;if(null==this.interval){var e=this;this.interval=setInterval(function(){var i=e.events.pop();i?e.emit(i.type,i.payload):t.bypass()},this.ms)}},Queue.prototype.stop=function(){null!=this.interval&&(clearInterval(this.interval),this.interval=null)},Queue.prototype.bypass=function(){this.bypassed=!0,this.stop()},Queue.prototype.push=function(t){this.bypassed?this.emit(t.type,t.payload):this.events.push(t)};var pmx=require("pmx"),probe=pmx.probe();Metrics={minersCounter:probe.counter({name:"Miners"}),connectionsCounter:probe.counter({name:"Connections"}),sharesCounter:probe.counter({name:"Shares"}),sharesMeter:probe.meter({name:"Shares per minute",samples:60})};const net=require("net"),tls=require("tls"),uuid=require("uuid");Connection.prototype=Object.create(EventEmitter.prototype),Connection.prototype.constructor=Connection,Connection.prototype.connect=function(){var t=this;this.online&&this.kill(),this.queue=new Queue,this.ssl?this.socket=tls.connect(+this.port,this.host,{rejectUnauthorized:!1}):this.socket=net.connect(+this.port,this.host),this.socket.on("connect",this.ready.bind(this)),this.socket.on("error",function(e){console.warn("socket error ("+t.host+":"+t.port+")",e.message),t.emit("error",e),t.connect()}),this.socket.on("close",function(){console.log("socket closed ("+t.host+":"+t.port+")"),t.emit("close")}),this.socket.setKeepAlive(!0),this.socket.setEncoding("utf8"),this.online=!0,Metrics.connectionsCounter.inc()},Connection.prototype.kill=function(){if(null!=this.socket)try{this.socket.end(),this.socket.destroy()}catch(t){console.warn("something went wrong while destroying socket ("+this.host+":"+this.port+"):",t.message)}null!=this.queue&&this.queue.stop(),this.online&&(this.online=!1,Metrics.connectionsCounter.dec())},Connection.prototype.ready=function(){var t=this;this.socket.on("data",function(e){for(t.buffer+=e;t.buffer.includes("\n");){var i=t.buffer.indexOf("\n"),s=t.buffer.slice(0,i);t.buffer=t.buffer.slice(i+1),t.receive(s)}}),this.queue.on("message",function(e){if(!t.online)return!1;if(!t.socket.writable){if("keepalived"===e.method)return!1;var i=e.retry?2*e.retry:1,s=100*i;return e.retry=i,setTimeout(function(){t.queue.push({type:"message",payload:e})},s),!1}try{e.retry&&delete e.retry,t.socket.write(JSON.stringify(e)+"\n")}catch(n){console.warn("failed to send message to pool ("+t.host+":"+t.port+"): "+JSON.stringify(e))}}),this.queue.start(),this.emit("ready")},Connection.prototype.receive=function(t){var e=null;try{e=JSON.parse(t)}catch(i){return console.warn("invalid stratum message:",t)}if(e.id){var s=e;if(!this.rpc[s.id])return;var n=this.rpc[s.id].minerId,o=this.rpc[s.id].message.method;switch(o){case"login":if(s.error&&-1===s.error.code)return void this.emit(n+":error",{error:"invalid_site_key"});var r=s.result,h=r.id;this.auth[n]=h,this.minerId[h]=n,this.emit(n+":authed",h),r.job&&this.emit(n+":job",r.job);break;case"submit":var c=this.rpc[s.id].message.params;s.result&&"OK"===s.result.status?this.emit(n+":accepted",c):s.error&&this.emit(n+":error",s.error);break;default:s.error&&-1===s.error.code&&this.emit(n+":error",s.error)}delete this.rpc[s.id]}else{var a=e;switch(a.method){case"job":var l=a.params,n=this.minerId[l.id];if(!n)return;this.emit(n+":job",a.params)}}},Connection.prototype.send=function(t,e,i){void 0===i&&(i={});var s={id:this.rpcId++,method:e,params:i};switch(e){case"login":break;case"keepalived":if(!this.auth[t])return!1;var n=s.params;n.id=this.auth[t];case"submit":if(!this.auth[t])return!1;var o=s.params;o.id=this.auth[t]}this.rpc[s.id]={minerId:t,message:s},this.queue.push({type:"message",payload:s})},Connection.prototype.addMiner=function(t){-1===this.miners.indexOf(t)&&this.miners.push(t)},Connection.prototype.removeMiner=function(t){var e=this.miners.find(function(e){return e.id===t});e&&(this.miners=this.miners.filter(function(e){return e.id!==t}),this.clear(e.id))},Connection.prototype.clear=function(t){var e=this,i=this.auth[t];delete this.auth[t],delete this.minerId[i],Object.keys(this.rpc).forEach(function(i){e.rpc[i].minerId===t&&delete e.rpc[i]})},Miner.prototype=Object.create(EventEmitter.prototype),Miner.prototype.constructor=Miner,Miner.prototype.connect=function(){var t=this;console.log("miner connected ("+this.id+")"),Metrics.minersCounter.inc(),this.ws.on("message",this.handleMessage.bind(this)),this.ws.on("close",function(){t.online&&(console.log("miner connection closed ("+t.id+")"),t.kill())}),this.ws.on("error",function(e){t.online&&(console.log("miner connection error ("+t.id+"):",e.message),t.kill())}),this.connection.addMiner(this),this.connection.on(this.id+":authed",this.handleAuthed.bind(this)),this.connection.on(this.id+":job",this.handleJob.bind(this)),this.connection.on(this.id+":accepted",this.handleAccepted.bind(this)),this.connection.on(this.id+":error",this.handleError.bind(this)),this.queue.on("message",function(e){return t.connection.send(t.id,e.method,e.params)}),this.heartbeat=setInterval(function(){return t.connection.send(t.id,"keepalived")},3e4),this.online=!0,this.online&&(this.queue.start(),console.log("miner started ("+this.id+")"),this.emit("open",{id:this.id}))},Miner.prototype.kill=function(){this.queue.stop(),this.connection.removeMiner(this.id),this.connection.removeAllListeners(this.id+":authed"),this.connection.removeAllListeners(this.id+":job"),this.connection.removeAllListeners(this.id+":accepted"),this.connection.removeAllListeners(this.id+":error"),this.jobs=[],this.hashes=0,this.ws.close(),this.heartbeat&&(clearInterval(this.heartbeat),this.heartbeat=null),this.online&&(this.online=!1,Metrics.minersCounter.dec(),console.log("miner disconnected ("+this.id+")"),this.emit("close",{id:this.id,login:this.login})),this.removeAllListeners()},Miner.prototype.sendToMiner=function(t){var e=JSON.stringify(t);if(this.online)try{this.ws.send(e)}catch(i){this.kill()}},Miner.prototype.sendToPool=function(t,e){this.queue.push({type:"message",payload:{method:t,params:e}})},Miner.prototype.handleAuthed=function(t){console.log("miner authenticated ("+this.id+"):",t),this.sendToMiner({type:"authed",params:{token:"",hashes:0}}),this.emit("authed",{id:this.id,login:this.login,auth:t})},Miner.prototype.handleJob=function(t){console.log("job arrived ("+this.id+"):",t.job_id),this.jobs.push(t),this.sendToMiner({type:"job",params:this.jobs.pop()}),this.emit("job",{id:this.id,login:this.login,job:t})},Miner.prototype.handleAccepted=function(t){this.hashes++,console.log("shares accepted ("+this.id+"):",this.hashes),Metrics.sharesCounter.inc(),Metrics.sharesMeter.mark(),this.sendToMiner({type:"hash_accepted",params:{hashes:this.hashes}}),this.emit("accepted",{id:this.id,login:this.login,hashes:this.hashes})},Miner.prototype.handleError=function(t){console.warn("pool connection error ("+this.id+"):",t.error||t&&JSON.stringify(t)||"unknown error"),this.sendToMiner({type:"error",params:t}),this.emit("error",{id:this.id,login:this.login,error:t}),this.kill()},Miner.prototype.handleMessage=function(t){var e;try{e=JSON.parse(t)}catch(i){return void console.warn("can't parse message as JSON from miner:",t,i.message)}switch(e.type){case"auth":var s=e.params;this.login=this.address||s.site_key;var n=this.user||s.user;n&&(this.login+="."+n),this.diff&&(this.login+="+"+this.diff),this.sendToPool("login",{login:this.login,pass:this.pass});break;case"submit":var o=e.params;console.log("job submitted ("+this.id+"):",o.job_id),this.sendToPool("submit",o),this.emit("found",{id:this.id,login:this.login,job:o})}},Proxy.prototype=Object.create(EventEmitter.prototype),Proxy.prototype.constructor=Proxy,Proxy.prototype.listen=function(t,e,i){var s=this,n=!(!this.key||!this.cert);if(!this.server){var o=function(t,e){if(s.credentials){var i=require("basic-auth")(t);if(!i||i.name!==s.credentials.user||i.pass!==s.credentials.pass)return e.statusCode=401,e.setHeader("WWW-Authenticate",'Basic realm="Access to stats"'),void e.end("Access denied")}var n=require("url").parse(t.url),o=s.getStats(),r=JSON.stringify({code:404,error:"Not Found"});"/stats"===n.pathname&&(r=JSON.stringify({miners:o.miners.length,connections:o.connections.length},null,2)),"/miners"===n.pathname&&(r=JSON.stringify(o.miners,null,2)),"/connections"===n.pathname&&(r=JSON.stringify(o.connections,null,2)),e.writeHead(200,{"Content-Length":Buffer.byteLength(r),"Content-Type":"application/json"}),e.end(r)};if(n){var r={key:this.key,cert:this.cert};this.server=https.createServer(r,o)}else this.server=http.createServer(o)}var h={server:this.server};this.path&&(h.path=this.path),this.wss=new WebSocket.Server(h),this.wss.on("connection",function(t,e){var i=url.parse(e.url,!0).query,n=s.host,o=s.port,r=s.pass;if(i.pool&&s.dynamicPool){var h=i.pool.split(":");n=h[0]||s.host,o=Number(h[1])||s.port,r=h[2]||s.pass}var c=s.getConnection(n,o),a=new Miner({connection:c,ws:t,address:s.address,user:s.user,diff:s.diff,pass:r});a.on("open",function(t){return s.emit("open",t)}),a.on("authed",function(t){return s.emit("authed",t)}),a.on("job",function(t){return s.emit("job",t)}),a.on("found",function(t){return s.emit("found",t)}),a.on("accepted",function(t){return s.emit("accepted",t)}),a.on("close",function(t){return s.emit("close",t)}),a.on("error",function(t){return s.emit("error",t)}),a.connect()}),e||i?!e&&i?this.server.listen(t,i):e&&!i?this.server.listen(t,e):this.server.listen(t,e,i):this.server.listen(t),console.log("listening on port "+t+(n?", using a secure connection":"")),h.path&&console.log("path: "+h.path),this.dynamicPool||(console.log("host: "+this.host),console.log("port: "+this.port),console.log("pass: "+this.pass))},Proxy.prototype.getConnection=function(t,e){var i=this,s=t+":"+e;this.connections[s]||(this.connections[s]=[]);var n=this.connections[s],o=n.filter(function(t){return i.isAvailable(t)});if(0===o.length){var r=new Connection({host:t,port:e,ssl:this.ssl});return r.connect(),r.on("close",function(){console.log("connection closed ("+s+")")}),r.on("error",function(t){console.log("connection error ("+s+"):",t.message)}),n.push(r),r}return o.pop()},Proxy.prototype.isAvailable=function(t){return t.miners.length<this.maxMinersPerConnection},Proxy.prototype.isEmpty=function(t){return 0===t.miners.length},Proxy.prototype.getStats=function(){var t=this;return Object.keys(this.connections).reduce(function(e,i){return{miners:e.miners.concat(t.connections[i].reduce(function(t,e){return t.concat(e.miners.map(function(t){return{id:t.id,login:t.login,hashes:t.hashes}}))},[])),connections:e.connections.concat(t.connections[i].map(function(t){return{id:t.id,host:t.host,port:t.port,miners:t.miners.length}}))}},{miners:[],connections:[]})},Proxy.prototype.kill=function(){var t=this;Object.keys(this.connections).forEach(function(e){var i=t.connections[e];i.forEach(function(t){t.kill(),t.miners.forEach(function(t){return t.kill()})})}),this.wss.close()},module.exports={Proxy:Proxy,Miner:Miner,Connection:Connection,Queue:Queue,Metrics:Metrics};