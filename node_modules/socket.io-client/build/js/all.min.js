function lookup(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var n,o=url(t),i=o.source,s=o.id,r=o.path,c=cache[s]&&r in cache[s].nsps;return e.forceNew||e["force new connection"]||!1===e.multiplex||c?(debug("ignoring socket cache for %s",i),n=Manager(i,e)):(cache[s]||(debug("new io instance for %s",i),cache[s]=Manager(i,e)),n=cache[s]),o.query&&!e.query&&(e.query=o.query),n.socket(o.path,e)}function Manager(t,e){if(!(this instanceof Manager))return new Manager(t,e);t&&"object"==typeof t&&(e=t,t=void 0),(e=e||{}).path=e.path||"/socket.io",this.nsps={},this.subs=[],this.opts=e,this.reconnection(!1!==e.reconnection),this.reconnectionAttempts(e.reconnectionAttempts||1/0),this.reconnectionDelay(e.reconnectionDelay||1e3),this.reconnectionDelayMax(e.reconnectionDelayMax||5e3),this.randomizationFactor(e.randomizationFactor||.5),this.backoff=new Backoff({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==e.timeout?2e4:e.timeout),this.readyState="closed",this.uri=t,this.connecting=[],this.lastPing=null,this.encoding=!1,this.packetBuffer=[];var n=e.parser||parser;this.encoder=new n.Encoder,this.decoder=new n.Decoder,this.autoConnect=!1!==e.autoConnect,this.autoConnect&&this.open()}function on(t,e,n){return t.on(e,n),{destroy:function(){t.removeListener(e,n)}}}function Socket(t,e,n){this.io=t,this.nsp=e,this.json=this,this.ids=0,this.acks={},this.receiveBuffer=[],this.sendBuffer=[],this.connected=!1,this.disconnected=!0,n&&n.query&&(this.query=n.query),this.io.autoConnect&&this.open()}function url(t,e){var n=t;e=e||global.location,null==t&&(t=e.protocol+"//"+e.host),"string"==typeof t&&("/"===t.charAt(0)&&(t="/"===t.charAt(1)?e.protocol+t:e.host+t),/^(https?|wss?):\/\//.test(t)||(debug("protocol-less url %s",t),t=void 0!==e?e.protocol+"//"+t:"https://"+t),debug("parse %s",t),n=parseuri(t)),n.port||(/^(http|ws)$/.test(n.protocol)?n.port="80":/^(http|ws)s$/.test(n.protocol)&&(n.port="443")),n.path=n.path||"/";var o=-1!==n.host.indexOf(":")?"["+n.host+"]":n.host;return n.id=n.protocol+"://"+o+":"+n.port,n.href=n.protocol+"://"+o+(e&&e.port===n.port?"":":"+n.port),n}var url=require("./url"),parser=require("socket.io-parser"),Manager=require("./manager"),debug=require("debug")("socket.io-client");module.exports=exports=lookup;var cache=exports.managers={};exports.protocol=parser.protocol,exports.connect=lookup,exports.Manager=require("./manager"),exports.Socket=require("./socket");var eio=require("engine.io-client"),Socket=require("./socket"),Emitter=require("component-emitter"),parser=require("socket.io-parser"),on=require("./on"),bind=require("component-bind"),debug=require("debug")("socket.io-client:manager"),indexOf=require("indexof"),Backoff=require("backo2"),has=Object.prototype.hasOwnProperty;module.exports=Manager,Manager.prototype.emitAll=function(){this.emit.apply(this,arguments);for(var t in this.nsps)has.call(this.nsps,t)&&this.nsps[t].emit.apply(this.nsps[t],arguments)},Manager.prototype.updateSocketIds=function(){for(var t in this.nsps)has.call(this.nsps,t)&&(this.nsps[t].id=this.generateId(t))},Manager.prototype.generateId=function(t){return("/"===t?"":t+"#")+this.engine.id},Emitter(Manager.prototype),Manager.prototype.reconnection=function(t){return arguments.length?(this._reconnection=!!t,this):this._reconnection},Manager.prototype.reconnectionAttempts=function(t){return arguments.length?(this._reconnectionAttempts=t,this):this._reconnectionAttempts},Manager.prototype.reconnectionDelay=function(t){return arguments.length?(this._reconnectionDelay=t,this.backoff&&this.backoff.setMin(t),this):this._reconnectionDelay},Manager.prototype.randomizationFactor=function(t){return arguments.length?(this._randomizationFactor=t,this.backoff&&this.backoff.setJitter(t),this):this._randomizationFactor},Manager.prototype.reconnectionDelayMax=function(t){return arguments.length?(this._reconnectionDelayMax=t,this.backoff&&this.backoff.setMax(t),this):this._reconnectionDelayMax},Manager.prototype.timeout=function(t){return arguments.length?(this._timeout=t,this):this._timeout},Manager.prototype.maybeReconnectOnOpen=function(){!this.reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()},Manager.prototype.open=Manager.prototype.connect=function(t,e){if(debug("readyState %s",this.readyState),~this.readyState.indexOf("open"))return this;debug("opening %s",this.uri),this.engine=eio(this.uri,this.opts);var n=this.engine,o=this;this.readyState="opening",this.skipReconnect=!1;var i=on(n,"open",function(){o.onopen(),t&&t()}),s=on(n,"error",function(e){if(debug("connect_error"),o.cleanup(),o.readyState="closed",o.emitAll("connect_error",e),t){var n=new Error("Connection error");n.data=e,t(n)}else o.maybeReconnectOnOpen()});if(!1!==this._timeout){var r=this._timeout;debug("connect attempt will timeout after %d",r);var c=setTimeout(function(){debug("connect attempt timed out after %d",r),i.destroy(),n.close(),n.emit("error","timeout"),o.emitAll("connect_timeout",r)},r);this.subs.push({destroy:function(){clearTimeout(c)}})}return this.subs.push(i),this.subs.push(s),this},Manager.prototype.onopen=function(){debug("open"),this.cleanup(),this.readyState="open",this.emit("open");var t=this.engine;this.subs.push(on(t,"data",bind(this,"ondata"))),this.subs.push(on(t,"ping",bind(this,"onping"))),this.subs.push(on(t,"pong",bind(this,"onpong"))),this.subs.push(on(t,"error",bind(this,"onerror"))),this.subs.push(on(t,"close",bind(this,"onclose"))),this.subs.push(on(this.decoder,"decoded",bind(this,"ondecoded")))},Manager.prototype.onping=function(){this.lastPing=new Date,this.emitAll("ping")},Manager.prototype.onpong=function(){this.emitAll("pong",new Date-this.lastPing)},Manager.prototype.ondata=function(t){this.decoder.add(t)},Manager.prototype.ondecoded=function(t){this.emit("packet",t)},Manager.prototype.onerror=function(t){debug("error",t),this.emitAll("error",t)},Manager.prototype.socket=function(t,e){function n(){~indexOf(i.connecting,o)||i.connecting.push(o)}var o=this.nsps[t];if(!o){o=new Socket(this,t,e),this.nsps[t]=o;var i=this;o.on("connecting",n),o.on("connect",function(){o.id=i.generateId(t)}),this.autoConnect&&n()}return o},Manager.prototype.destroy=function(t){var e=indexOf(this.connecting,t);~e&&this.connecting.splice(e,1),this.connecting.length||this.close()},Manager.prototype.packet=function(t){debug("writing packet %j",t);var e=this;t.query&&0===t.type&&(t.nsp+="?"+t.query),e.encoding?e.packetBuffer.push(t):(e.encoding=!0,this.encoder.encode(t,function(n){for(var o=0;o<n.length;o++)e.engine.write(n[o],t.options);e.encoding=!1,e.processPacketQueue()}))},Manager.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var t=this.packetBuffer.shift();this.packet(t)}},Manager.prototype.cleanup=function(){debug("cleanup");for(var t=this.subs.length,e=0;e<t;e++){this.subs.shift().destroy()}this.packetBuffer=[],this.encoding=!1,this.lastPing=null,this.decoder.destroy()},Manager.prototype.close=Manager.prototype.disconnect=function(){debug("disconnect"),this.skipReconnect=!0,this.reconnecting=!1,"opening"===this.readyState&&this.cleanup(),this.backoff.reset(),this.readyState="closed",this.engine&&this.engine.close()},Manager.prototype.onclose=function(t){debug("onclose"),this.cleanup(),this.backoff.reset(),this.readyState="closed",this.emit("close",t),this._reconnection&&!this.skipReconnect&&this.reconnect()},Manager.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect)return this;var t=this;if(this.backoff.attempts>=this._reconnectionAttempts)debug("reconnect failed"),this.backoff.reset(),this.emitAll("reconnect_failed"),this.reconnecting=!1;else{var e=this.backoff.duration();debug("will wait %dms before reconnect attempt",e),this.reconnecting=!0;var n=setTimeout(function(){t.skipReconnect||(debug("attempting reconnect"),t.emitAll("reconnect_attempt",t.backoff.attempts),t.emitAll("reconnecting",t.backoff.attempts),t.skipReconnect||t.open(function(e){e?(debug("reconnect attempt error"),t.reconnecting=!1,t.reconnect(),t.emitAll("reconnect_error",e.data)):(debug("reconnect success"),t.onreconnect())}))},e);this.subs.push({destroy:function(){clearTimeout(n)}})}},Manager.prototype.onreconnect=function(){var t=this.backoff.attempts;this.reconnecting=!1,this.backoff.reset(),this.updateSocketIds(),this.emitAll("reconnect",t)},module.exports=on;var parser=require("socket.io-parser"),Emitter=require("component-emitter"),toArray=require("to-array"),on=require("./on"),bind=require("component-bind"),debug=require("debug")("socket.io-client:socket"),parseqs=require("parseqs");module.exports=exports=Socket;var events={connect:1,connect_error:1,connect_timeout:1,connecting:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1,ping:1,pong:1},emit=Emitter.prototype.emit;Emitter(Socket.prototype),Socket.prototype.subEvents=function(){if(!this.subs){var t=this.io;this.subs=[on(t,"open",bind(this,"onopen")),on(t,"packet",bind(this,"onpacket")),on(t,"close",bind(this,"onclose"))]}},Socket.prototype.open=Socket.prototype.connect=function(){return this.connected?this:(this.subEvents(),this.io.open(),"open"===this.io.readyState&&this.onopen(),this.emit("connecting"),this)},Socket.prototype.send=function(){var t=toArray(arguments);return t.unshift("message"),this.emit.apply(this,t),this},Socket.prototype.emit=function(t){if(events.hasOwnProperty(t))return emit.apply(this,arguments),this;var e=toArray(arguments),n={type:parser.EVENT,data:e};return n.options={},n.options.compress=!this.flags||!1!==this.flags.compress,"function"==typeof e[e.length-1]&&(debug("emitting packet with ack id %d",this.ids),this.acks[this.ids]=e.pop(),n.id=this.ids++),this.connected?this.packet(n):this.sendBuffer.push(n),delete this.flags,this},Socket.prototype.packet=function(t){t.nsp=this.nsp,this.io.packet(t)},Socket.prototype.onopen=function(){if(debug("transport is open - connecting"),"/"!==this.nsp)if(this.query){var t="object"==typeof this.query?parseqs.encode(this.query):this.query;debug("sending connect packet with query %s",t),this.packet({type:parser.CONNECT,query:t})}else this.packet({type:parser.CONNECT})},Socket.prototype.onclose=function(t){debug("close (%s)",t),this.connected=!1,this.disconnected=!0,delete this.id,this.emit("disconnect",t)},Socket.prototype.onpacket=function(t){if(t.nsp===this.nsp)switch(t.type){case parser.CONNECT:this.onconnect();break;case parser.EVENT:case parser.BINARY_EVENT:this.onevent(t);break;case parser.ACK:case parser.BINARY_ACK:this.onack(t);break;case parser.DISCONNECT:this.ondisconnect();break;case parser.ERROR:this.emit("error",t.data)}},Socket.prototype.onevent=function(t){var e=t.data||[];debug("emitting event %j",e),null!=t.id&&(debug("attaching ack callback to event"),e.push(this.ack(t.id))),this.connected?emit.apply(this,e):this.receiveBuffer.push(e)},Socket.prototype.ack=function(t){var e=this,n=!1;return function(){if(!n){n=!0;var o=toArray(arguments);debug("sending ack %j",o),e.packet({type:parser.ACK,id:t,data:o})}}},Socket.prototype.onack=function(t){var e=this.acks[t.id];"function"==typeof e?(debug("calling ack %s with %j",t.id,t.data),e.apply(this,t.data),delete this.acks[t.id]):debug("bad ack %s",t.id)},Socket.prototype.onconnect=function(){this.connected=!0,this.disconnected=!1,this.emit("connect"),this.emitBuffered()},Socket.prototype.emitBuffered=function(){var t;for(t=0;t<this.receiveBuffer.length;t++)emit.apply(this,this.receiveBuffer[t]);for(this.receiveBuffer=[],t=0;t<this.sendBuffer.length;t++)this.packet(this.sendBuffer[t]);this.sendBuffer=[]},Socket.prototype.ondisconnect=function(){debug("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")},Socket.prototype.destroy=function(){if(this.subs){for(var t=0;t<this.subs.length;t++)this.subs[t].destroy();this.subs=null}this.io.destroy(this)},Socket.prototype.close=Socket.prototype.disconnect=function(){return this.connected&&(debug("performing disconnect (%s)",this.nsp),this.packet({type:parser.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this},Socket.prototype.compress=function(t){return this.flags=this.flags||{},this.flags.compress=t,this};var parseuri=require("parseuri"),debug=require("debug")("socket.io-client:url");module.exports=url;