# Description:
#   None
#
# Dependencies:
#   "redis": "0.8.4"
#
# Configuration:
#   REDISTOGO_URL or REDISCLOUD_URL or BOXEN_REDIS_URL or REDIS_URL.
#   URL format: redis://<host>:<port>[/<brain_prefix>]
#   If not provided, '<brain_prefix>' will default to 'imubot'.
#
# Commands:
#   None
#
# Authors:
#   atmos
#   jan0sch
#   spajus

Url   = require "url"
Redis = require "redis"

module.exports = (bot) ->
  info   = Url.parse process.env.REDISTOGO_URL or process.env.REDISCLOUD_URL or process.env.BOXEN_REDIS_URL or process.env.REDIS_URL or 'redis://localhost:6379', true
  client = Redis.createClient(info.port, info.hostname)
  prefix = info.path?.replace('/', '') or 'imubot'

  bot.brain.setAutoSave false

  getData = ->
    client.get "#{prefix}:storage", (err, reply) ->
      if err
        throw err
      else if reply
        bot.logger.info "Data for #{prefix} brain retrieved from Redis"
        bot.brain.mergeData JSON.parse(reply.toString())
      else
        bot.logger.info "Initializing new data for #{prefix} brain"
        bot.brain.mergeData {}

      bot.brain.setAutoSave true

  if info.auth
    client.auth info.auth.split(":")[1], (err) ->
      if err
        bot.logger.error "Failed to authenticate to Redis"
      else
        bot.logger.info "Successfully authenticated to Redis"
        getData()

  client.on "error", (err) ->
    bot.logger.error err

  client.on "connect", ->
    bot.logger.debug "Successfully connected to Redis"
    getData() if not info.auth

  bot.brain.on 'save', (data = {}) ->
    client.set "#{prefix}:storage", JSON.stringify data

  bot.brain.on 'close', ->
    client.quit()
